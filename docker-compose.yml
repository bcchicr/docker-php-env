version: '3'

services:
  server:
    container_name: ${APP_NAME}-server
    image: nginx:${NGINX_VERSION}
    restart: unless-stopped
    ports:
      - ${NETWORK_INTERFACE}:${NGINX_PORT}:80
    volumes:
      - ${APP_CODE_PATH}:/var/www/html/
      - ./nginx/templates/:/etc/nginx/templates/
      - ./nginx/logs/:/var/log/nginx/
    environment:
      APP_NAME: ${APP_NAME}
    depends_on:
      app:
        condition: service_started

  app:
    container_name: ${APP_NAME}-app
    build:
      context: ./
      dockerfile: ./php/Dockerfile
      target: ${APP_TARGET}-app
      args:
        PHP_VERSION: ${PHP_VERSION}
        COMPOSER_VERSION: ${COMPOSER_VERSION}
        user: ${USER}
        uid: ${UID}
    command: ['php-fpm']
    restart: unless-stopped
    volumes:
      - ${APP_CODE_PATH}:/var/www/html/
      - ./php/ini/conf.d/:/usr/local/etc/php/conf.d/
      - ./php/ini/${APP_TARGET}.php.ini:/usr/local/etc/php/php.ini
    environment:
      XDEBUG_MODE: ${XDEBUG_MODE}
    extra_hosts:
      - host.docker.internal:host-gateway
    depends_on:
      db:
        condition: service_healthy
      cache:
        condition: service_healthy
#      composer-deps:
#        condition: service_completed_successfully

#  composer-deps:
#    container_name: ${APP_NAME}-composer-deps
#    build:
#      context: ./php/
#      dockerfile: Dockerfile
#      args:
#        PHP_VERSION: ${PHP_VERSION}
#        COMPOSER_VERSION: ${COMPOSER_VERSION}
#      target: ${APP_TARGET}-composer-deps
#    volumes:
#      - ${APP_CODE_PATH}:/var/www/html/

  adminer:
    container_name: ${APP_NAME}-adminer
    image: adminer:${ADMINER_VERSION}
    restart: unless-stopped
    ports:
      - ${NETWORK_INTERFACE}:${ADMINER_PORT}:8080
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: ${APP_NAME}-db
    image: postgres:${POSTGRES_VERSION}
    restart: unless-stopped
    ports:
      - ${NETWORK_INTERFACE}:${POSTGRES_PORT}:5432
    volumes:
      - db-vol:/var/lib/postgresql/data/
      - ./postgres/dump:/dump
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}']
      interval: 5s
      timeout: 5s
      retries: 3

  cache:
    container_name: ${APP_NAME}-cache
    image: redis:${REDIS_VERSION}
    restart: unless-stopped
    ports:
      - ${NETWORK_INTERFACE}:${REDIS_PORT}:6379
    volumes:
      - cache-vol:/data/
      - ./redis/conf:/usr/local/etc/redis/redis.conf
    healthcheck:
      test: ['CMD-SHELL', 'redis-cli ping']
      interval: 5s
      timeout: 5s
      retries: 3

volumes:
  db-vol:
    name: ${APP_NAME}-db-vol
  cache-vol:
    name: ${APP_NAME}-cache-vol

networks:
  default:
    name: ${APP_NAME}-network;
